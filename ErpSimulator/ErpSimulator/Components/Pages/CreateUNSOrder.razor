@page "/createUNSOrder"
@using Domain.Entities
@using System.Text.Json;
@using Domain.Entities.UNS
@using Domain.Interfaces
@using Infrastructure.Services
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject UnsOrderService UnsOrderService
@inject NavigationManager _nav
@inject IJSRuntime JS


<PageTitle>Create UNS Order</PageTitle>
<h1>Create UNS Order</h1>

<form method="post" @onsubmit="Submit" @formname="create-order-form">
    <div style="display: flex; flex-direction: row; gap: 100px; margin-top: 20px">
        <div style="display: flex; flex-direction: column; gap: 10px">
            <label style="display: flex; flex-direction: row;">
                <div style="width: 100px;">ID:</div>
                <InputText @bind-Value="OrderForm!.ID" />
            </label>
            <label style="display: flex; flex-direction: row;">
               <div style="width: 100px;"> Description:</div>
                <InputText @bind-Value="OrderForm!.Description" />
            </label>
            <label style="display: flex; flex-direction: row;">
                <div style="width: 100px;">Type:</div>
                <InputText @bind-Value="OrderForm!.Type" />
            </label>
            <label style="display: flex; flex-direction: row;">
                <div style="width: 100px;">Start:</div>
                <InputDate @bind-Value="OrderForm!.StartTime" />
            </label>
            <label style="display: flex; flex-direction: row;">
                <div style="width: 100px;">End:</div>
                <InputDate @bind-Value="OrderForm!.EndTime" />
            </label>
            <label style="display: flex; flex-direction: row;">
                <div style="width: 100px;">Priority:</div>
                <InputText @bind-Value="OrderForm!.Priority" />
            </label>
            <label style="display: flex; flex-direction: row;">
                <div style="width: 100px;">State:</div>
                <InputText @bind-Value="OrderForm!.OrderState" />
            </label>
            <label style="display: flex; flex-direction: row;">
                <div style="width: 100px;">Status:</div>
                <InputText @bind-Value="OrderForm!.Status" />
            </label>
            <label style="display: flex; flex-direction: row;">
                <div style="width: 100px;">MaterialId:</div>
                <InputText @bind-Value="OrderForm!.MaterialId" />
            </label>
        </div>
        <div style="display: flex; flex-direction: column">
            <label>Components:</label>
            <div id="ScrollCB" style="height:140px;width:250px;overflow:auto; margin-bottom: 10px">
                <select multiple @bind="OrderForm.ComponentList">
                    @foreach (var component in components)
                    {
                        <option value="@component" key="@component">@component.ComponentId</option>
                    }
                </select>
            </div>
            <label>Operations Instructions:</label>
            <div id="ScrollCB" style="height:140px;width:250px;overflow:auto">
                <select multiple @bind="OrderForm.OperationsInstruction">
                    @foreach (var operationInstruction in operationInstructions)
                    {
                        <option value="@operationInstruction" key="@operationInstruction">@operationInstruction.Description</option>
                    }
                </select>
            </div>
        </div>
    </div>
    
    <div style="margin-top: 15px">
        <button type="submit">Submit</button>
    </div>
</form>


@code {
    public UnsOrder? OrderForm { get; set; }

    public List<Component> components = new List<Component>();
    public List<OperationsInstruction> operationInstructions = new List<OperationsInstruction>();    

    private async Task Submit() {
        await JS.InvokeVoidAsync("console.log", OrderForm);
        await UnsOrderService.CreateUnsOrderAsync(OrderForm);
        _nav.NavigateTo("/createUNSOrder");
    }

}
